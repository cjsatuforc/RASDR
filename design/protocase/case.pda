# Protocase Designer Configuration 
Assembly:
  designer: {'Mar 14, 2015 2:58:00 PM EDT': '4.4.8 Sep29,14', 'Mar 14, 2015 3:29:40 PM EDT': '4.4.8
      Sep29,14', 'Mar 14, 2015 3:45:15 PM EDT': '4.4.8 Sep29,14', 'Mar 14, 2015 3:56:45 PM EDT': '4.4.8
      Sep29,14', 'Mar 14, 2015 3:58:24 PM EDT': '4.4.8 Sep29,14', 'Mar 14, 2015 4:00:47 PM EDT': '4.4.8
      Sep29,14', 'Mar 14, 2015 6:20:08 AM EDT': '4.4.8 Sep29,14', 'Mar 14, 2015 6:38:00 AM EDT': '4.4.8
      Sep29,14', 'Mar 14, 2015 6:47:01 AM EDT': '4.4.8 Sep29,14', 'Mar 14, 2015 7:18:22 AM EDT': '4.4.8
      Sep29,14', 'Mar 14, 2015 7:48:07 AM EDT': '4.4.8 Sep29,14', 'Mar 14, 2015 7:54:39 AM EDT': '4.4.8
      Sep29,14'}
  QuotedUnits: MM
  DesignID: L-Shape Template Rev 10
  name: L Shape
  version: 7.5
  description: An L-Shaped Enclosure
  manufacturer: Protocase
  partnumber: L-Shape Template
  ID: 78a3077a-91b7-4d96-8870-069f1644dafe
  verified: true
  Parser:
    verified: false
    version: 7.5
    id: userOptions
    partnumber: userOptions
    manufacturer: ''
    name: userOptions
    Parameters:
    - {name: Use Metric Fasteners, default: '1', description: whether the user who created the file was working in metric,
      template: true, boolean: true}
    Parser:
      id: metalOptions
      partnumber: metalOptions
      manufacturer: ''
      name: metalOptions
      Parameters:
      - {name: MetalType, default: Cold Rolled Steel, description: the type of metal used,
        template: true, units: MetalType}
      - {name: Default Color, default: 'White Sandtex, Medium Gloss, Fine Texture
          Polyester Powder', description: The Default Color for the Enclosure, template: true,
        units: MetalColor}
      - {name: PartsGap, default: '.01', description: the gap between parts (for manufacturing)}
      Parser:
        id: metalOptions
        partnumber: metalOptions
        manufacturer: ''
        name: a98c7435-51c7-45b2-a6c5-d43474c997e9
        Parameters:
        - {name: Chem Film, default: '0', description: whether to use Chem Film treatment,
          template: true, boolean: true, displays: '"MetalType" CONTAINS STRING "Aluminum"'}
        Warnings:
        - {formula: Chem Film, message: 'If using Chem Film treatment, Zinc fasteners
            must be placeable after bending to be compatible with Chem Film. This
            is hard to predict but generally may mean they must be further from the
            edges of the enclosure if inside the enclosure (room for tooling). It
            is recommended that you use stainless steel fasteners if using Chem Film.'}
        - {formula: ("MetalType" CONTAINS STRING "Aluminum") AND (! Chem Film), message: 'If
            using Aluminum, Zinc fasteners can be used but stainless steel fasteners
            are recommended'}
        Parser:
          id: metalOptions
          partnumber: metalOptions
          manufacturer: ''
          name: b22c6493-7dc4-40b0-8430-4f7b18f2be18
          Parameters:
          - {name: useStainlessPEMs, default: ("MetalType" CONTAINS STRING "Stainless") OR (("MetalType" CONTAINS STRING "Aluminum") AND (Chem Film)),
            description: whether to use stainless steel fasteners., boolean: true}
          Parser:
            id: screwOptions
            partnumber: screwOptions
            manufacturer: ''
            name: screwOptions
            Parameters:
            - {name: Screw Type, default: Natural Panhead, description: Use Black Finish Screws instead of Natural Finish,
              template: true, units: ScrewType}
            Parser:
              id: screwOptions
              partnumber: screwOptions
              manufacturer: ''
              name: 8bcdd9b9-31f5-4464-869b-c645c772d673
              Parameters:
              - {name: 6-32 screw, default: 'IfElse("Screw Type" CONTAINS STRING "Natural
                  Panhead", "6-32 3/8in natural panhead screw", IfElse("Screw Type"
                  CONTAINS STRING "Natural Flathead", "6-32 3/8in natural flathead
                  screw", IfElse("Screw Type" CONTAINS STRING "Black Panhead", "6-32
                  3/8in black panhead screw", IfElse("Screw Type" CONTAINS STRING
                  "Black Flathead", "6-32 3/8in black flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Stainless Panhead", "6-32 3/8in stainless
                  panhead screw", "6-32 3/8in stainless flathead screw")))))'}
              - {name: 8-32 screw, default: 'IfElse("Screw Type" CONTAINS STRING "Natural
                  Panhead", "8-32 3/8in natural panhead screw", IfElse("Screw Type"
                  CONTAINS STRING "Natural Flathead", "8-32 3/8in natural flathead
                  screw", IfElse("Screw Type" CONTAINS STRING "Black Panhead", "8-32
                  3/8in black panhead screw", IfElse("Screw Type" CONTAINS STRING
                  "Black Flathead", "8-32 3/8in black flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Stainless Panhead", "8-32 3/8in stainless
                  panhead screw", "8-32 3/8in stainless flathead screw")))))'}
              - {name: 6-32 handle screw, default: 'IfElse("Screw Type" CONTAINS STRING
                  "Natural", "6-32 3/8in natural panhead screw", IfElse("Screw Type"
                  CONTAINS STRING "Black", "6-32 3/8in black panhead screw", "6-32
                  3/8in stainless panhead screw"))'}
              - {name: 8-32 handle screw, default: 'IfElse("Screw Type" CONTAINS STRING
                  "Natural", "8-32 3/8in natural panhead screw", IfElse("Screw Type"
                  CONTAINS STRING "Black", "8-32 3/8in black panhead screw", "8-32
                  3/8in stainless panhead screw"))'}
              - {name: 8-32 bracket screw, default: 'IfElse("Screw Type" CONTAINS
                  STRING "Natural", "8-32 3/8in natural flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Black", "8-32 3/8in black flathead screw",
                  "8-32 3/8in stainless flathead screw"))'}
              - {name: 6-32 bracket screw, default: 'IfElse("Screw Type" CONTAINS
                  STRING "Natural", "6-32 3/8in natural flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Black", "6-32 3/8in black flathead screw",
                  "6-32 3/8in stainless flathead screw"))'}
              - {name: 10-32 handle screw, default: '"10-32 1 1/4 natural flathead
                  screw"'}
              - {name: 6-32 flathead screw, default: 'IfElse("Screw Type" CONTAINS
                  STRING "Natural", "6-32 3/8in natural flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Black", "6-32 3/8in black flathead screw",
                  "6-32 3/8in stainless flathead screw"))'}
              - {name: 8-32 flathead screw, default: 'IfElse("Screw Type" CONTAINS
                  STRING "Natural", "8-32 3/8in natural flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Black", "8-32 3/8in black flathead screw",
                  "8-32 3/8in stainless flathead screw"))'}
              - {name: m3 screw, default: 'IfElse("Screw Type" CONTAINS STRING "Natural
                  Panhead", "m3 6mm natural panhead screw", IfElse("Screw Type" CONTAINS
                  STRING "Natural Flathead", "m3 6mm natural flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Black Panhead", "m3 6mm black panhead screw",
                  IfElse("Screw Type" CONTAINS STRING "Black Flathead", "m3 6mm black
                  flathead screw", IfElse("Screw Type" CONTAINS STRING "Stainless
                  Panhead", "m3 6mm stainless panhead screw", "m3 6mm stainless flathead
                  screw")))))'}
              - {name: m4 screw, default: 'IfElse("Screw Type" CONTAINS STRING "Natural
                  Panhead", "m4 6mm natural panhead screw", IfElse("Screw Type" CONTAINS
                  STRING "Natural Flathead", "m4 6mm natural flathead screw", IfElse("Screw
                  Type" CONTAINS STRING "Black Panhead", "m4 6mm black panhead screw",
                  IfElse("Screw Type" CONTAINS STRING "Black Flathead", "m4 6mm black
                  flathead screw", IfElse("Screw Type" CONTAINS STRING "Stainless
                  Panhead", "m4 6mm stainless panhead screw", "m4 6mm stainless flathead
                  screw")))))'}
              - {name: m4 bracket screw, default: 'IfElse("Screw Type" CONTAINS STRING
                  "Natural", "m4 6mm natural flathead screw", IfElse("Screw Type"
                  CONTAINS STRING "Black", "m4 6mm black flathead screw", "m4 6mm
                  stainless flathead screw"))'}
              - {name: m3 bracket screw, default: 'IfElse("Screw Type" CONTAINS STRING
                  "Natural", "m3 6mm natural flathead screw", IfElse("Screw Type"
                  CONTAINS STRING "Black", "m3 6mm black flathead screw", "m3 6mm
                  stainless flathead screw"))'}
              - {name: m3 flathead screw, default: 'IfElse("Screw Type" CONTAINS STRING
                  "Natural", "m3 6mm natural flathead screw", IfElse("Screw Type"
                  CONTAINS STRING "Black", "m3 6mm black flathead screw", "m3 6mm
                  stainless flathead screw"))'}
              - {name: m4 flathead screw, default: 'IfElse("Screw Type" CONTAINS STRING
                  "Natural", "m4 6mm natural flathead screw", IfElse("Screw Type"
                  CONTAINS STRING "Black", "m4 6mm black flathead screw", "m4 6mm
                  stainless flathead screw"))'}
              Parser:
                id: screwOptions
                partnumber: screwOptions
                manufacturer: ''
                name: 313f4061-a762-48f0-b38c-55c264ac629f
                Parameters:
                - {name: useStainlessPEMs, default: ("MetalType" CONTAINS STRING "Stainless") OR (("MetalType" CONTAINS STRING "Aluminum") AND (Chem Film)),
                  description: whether to use stainless steel fasteners., boolean: true}
                Parser:
                  id: screwOptions
                  partnumber: screwOptions
                  manufacturer: ''
                  name: d14fe99c-fdc2-4df2-a164-0bfbe6797da9
                  Parameters:
                  - {name: 6-32 nut, default: 'IfElse(useStainlessPEMs,"SP-632-1","S-632-1ZI")'}
                  - {name: 8-32 nut, default: 'IfElse(useStainlessPEMs,"SP-832-1","S-832-1ZI")'}
                  - {name: 10-32 nut, default: 'IfElse(useStainlessPEMs,"SP-032-1","SS-032-1ZI")'}
                  - {name: 8-32 stud, default: 'IfElse(useStainlessPEMs, "FH4-832-6",
                      "FH-832-6ZI")'}
                  - {name: 6-32 stud, default: 'IfElse(useStainlessPEMs, "FH4-632-6",
                      "FH-632-6ZI")'}
                  - {name: 6-32 long stud, default: 'IfElse(useStainlessPEMs, "FH4-632-8",
                      "FH-632-8ZI")'}
                  - {name: m3 nut, default: 'IfElse(useStainlessPEMs, "SP-M3-1", "S-M3-1ZI")'}
                  - {name: m4 nut, default: 'IfElse(useStainlessPEMs, "SP-M4-1", "SS-M4-1ZI")'}
                  - {name: m4 stud, default: 'IfElse(useStainlessPEMs, "FH4-M4-10",
                      "FH-M4-10ZI")'}
                  - {name: m3 stud, default: 'IfElse(useStainlessPEMs, "FH4-M3-10",
                      "FH-M3-10ZI")'}
                  - {name: m3 long stud, default: 'IfElse(useStainlessPEMs, "FH4-M3-10",
                      "FH-M3-10ZI")'}
                  - {name: small screw, default: 'IfElse(Use Metric Fasteners, m3
                      screw, 6-32 screw)'}
                  - {name: medium screw, default: 'IfElse(Use Metric Fasteners, m4
                      screw, 8-32 screw)'}
                  - {name: small bracket screw, default: 'IfElse(Use Metric Fasteners,
                      m3 bracket screw, 6-32 bracket screw)'}
                  - {name: medium bracket screw, default: 'IfElse(Use Metric Fasteners,
                      m4 bracket screw, 8-32 bracket screw)'}
                  - {name: small flathead screw, default: 'IfElse(Use Metric Fasteners,
                      m3 flathead screw, 6-32 flathead screw)'}
                  - {name: medium flathead screw, default: 'IfElse(Use Metric Fasteners,
                      m4 flathead screw, 8-32 flathead screw)'}
                  Parser:
                    id: screwOptions
                    partnumber: screwOptions
                    manufacturer: ''
                    name: 191490d2-c82c-4396-819e-42e585ad3b44
                    Parameters:
                    - {name: small nut, default: 'IfElse(Use Metric Fasteners, m3
                        nut, 6-32 nut)'}
                    - {name: medium nut, default: 'IfElse(Use Metric Fasteners, m4
                        nut, 8-32 nut)'}
                    - {name: medium stud, default: 'IfElse(Use Metric Fasteners, m4
                        stud, 8-32 stud)'}
                    - {name: small stud, default: 'IfElse(Use Metric Fasteners, m3
                        stud, 6-32 stud)'}
                    - {name: small long stud, default: 'IfElse(Use Metric Fasteners,
                        m3 long stud, 6-32 long stud)'}
                    Parser:
                      id: lShapeBaseMetal
                      partnumber: lShapeBaseMetal
                      manufacturer: ''
                      name: lShapeBaseMetal
                      Parameters:
                      - {name: Base Thickness, default: '18', description: the thickness of the base of the enclosure,
                        template: true, units: MetalThickness}
                      - {name: Base Color, default: Use Default, description: the color of the base of the enclosure,
                        template: true, units: MetalColor}
                      Parser:
                        id: lShapeBaseMetal
                        partnumber: lShapeBaseMetal
                        manufacturer: ''
                        name: lShapeBaseMetal
                        Parameters:
                        - {name: BaseBendRad, default: 'BiVariate(BendingRadii, Base
                            Thickness, "MetalType")', description: the bend radius of the base}
                        - {name: BaseKFactor, default: '.5', description: the default kfactor of the base}
                        Parser:
                          id: lShapeCoverMetal
                          partnumber: lShapeCoverMetal
                          manufacturer: ''
                          name: lShapeCoverMetal
                          Parameters:
                          - {name: Cover Thickness, default: '18', description: the thickness of the cover of the enclosure,
                            template: true, units: MetalThickness}
                          - {name: Cover Color, default: Use Default, description: the color of the cover of the enclosure,
                            template: true, units: MetalColor}
                          Parser:
                            id: lShapeCoverMetal
                            partnumber: lShapeCoverMetal
                            manufacturer: ''
                            name: lShapeCoverMetal
                            Parameters:
                            - {name: CoverBendRad, default: 'BiVariate(BendingRadii,
                                Cover Thickness, "MetalType")', description: the bend radius of the cover}
                            - {name: CoverKFactor, default: '.5', description: the default kfactor of the cover}
                            Parser:
                              id: lShapeOptions
                              partnumber: lShapeOptions
                              manufacturer: ''
                              name: lShapeOptions
                              Parameters:
                              - {name: CoverMounts, default: '0', description: no mounting wings,
                                boolean: true}
                              Parser:
                                id: lShapeSizes
                                partnumber: lShapeSizes
                                manufacturer: ''
                                name: lShapeSizes
                                Parameters:
                                - {name: Base Width, default: '6.496062992125984',
                                  description: the width of the enclosure base, template: true,
                                  min: '1', max: '50'}
                                - {name: Depth, default: '2.51968504', description: the depth of the enclosure base,
                                  template: true, min: '1', max: '50'}
                                - {name: Height, default: '1.0236220472440944', description: the height of the enclosure base,
                                  template: true, min: '.75', max: '24'}
                                - {name: FlangeSize, default: '.427', description: the width of a flange}
                                - {name: TabSize, default: '.238', description: The length of the tabs for the corners}
                                - {name: NotchSize, default: '.012', description: the width of a Notch}
                                - {name: HoleOffsetH, default: '.625', description: the distance from the edge of a vertical flange to place a hole if not centered.}
                                - {name: ChassisFlangeHoleOffset, default: '.358',
                                  description: the distance from the center of a hole on the chassis flanges to the front or rear of the enclosure.}
                                - {name: HoleOffsetD, default: '.225', description: the distance from the edge of a horizontal flange to place a hole if not centered.}
                                - {name: Overhang, default: '.03', description: the overhang for the cover}
                                Parser:
                                  id: lShapeSizes
                                  partnumber: lShapeSizes
                                  manufacturer: ''
                                  name: lShapeSizes
                                  Parameters:
                                  - {name: FLD, default: ' IfElse( Height > 1.5 ,
                                      (Depth - Base Thickness - BaseBendRad - FlangeSize
                                      - NotchSize - PartsGap) , (Depth - Base Thickness
                                      - PartsGap)) - IfElse(Height > Depth, CoverBendRad,
                                      0)'}
                                  - {name: FLH, default: Height - Base Thickness - TabSize - NotchSize}
                                  - {name: FLW, default: Base Width - 2 * TabSize - 2 * NotchSize}
                                  - {name: Width Including Mounts, default: '0', description: unused}
                                  Parser:
                                    id: lShapeSizes
                                    partnumber: lShapeSizes
                                    manufacturer: ''
                                    name: 97b03645-196a-4e4f-8246-d4545c2b2611
                                    Parameters:
                                    - {name: CoverScrew, default: small screw}
                                    - {name: CoverNut, default: small nut}
                                    - {name: CornerRad, default: '.03', description: the rounding of corners to prevent scratching}
                                    - {name: sqrt3o2, default: '0.8660254037844386',
                                      description: sqrt(3)/2}
                                    Constraints:
                                    - {formula: 'IfElse(Base Width > 3.0, Height LEQ
                                        (Base Width - 2), 1)', message: 'In enclosures
                                        where the width is greater than 3, the width
                                        must be greater than the height by at least
                                        2 inches'}
                                    - {formula: 'IfElse(Base Width LEQ 3.0, Height
                                        LEQ Base Width, 1)', message: 'In enclosures
                                        where the width is not greater than 3, the
                                        Width must not be greater than the Height'}
    InlineFormulas:
    - {name: SteelBendingRadii, variable: metalThick, formula: 'IfElse(metalThick
        < .119,IfElse(metalThick < .104,IfElse(metalThick < .089,IfElse(metalThick
        < .074,IfElse(metalThick < .059,IfElse(metalThick < .047,IfElse(metalThick
        < .035,IfElse(metalThick < .029,.070,.065),.065),.075),.07),.06),.085),.08),.075)'}
    - {name: GalvaneelBendingRadii, variable: metalThick, formula: 'IfElse(metalThick
        < .077,IfElse(metalThick < .062,IfElse(metalThick < .051,IfElse(metalThick
        < .039,IfElse(metalThick < .033,.070,.065),.065),.075),.070),.060)'}
    - {name: StainlessBendingRadii, variable: metalThick, formula: 'IfElse(metalThick
        < .124,IfElse(metalThick < .077,IfElse(metalThick < .061,IfElse(metalThick
        < .049,IfElse(metalThick < .036,IfElse(metalThick < .030,.043,.090),.090),.070),.075),.060),.09)'}
    - {name: AluminumBendingRadii, variable: metalThick, formula: 'IfElse(metalThick
        < .124,IfElse(metalThick < .090,IfElse(metalThick < .080,IfElse(metalThick
        < .063,IfElse(metalThick < .050,IfElse(metalThick < .039,.020,.020),.020),.025),.030),.028),.030)'}
    - {name: BendingRadii, variable1: metalThick, variable2: metalType, formula: 'IfElse(metalType
        CONTAINS STRING "Cold Rolled", MonoVariate(SteelBendingRadii, metalThick),
        IfElse(metalType CONTAINS STRING "Galvaneel",MonoVariate(GalvaneelBendingRadii,
        metalThick), IfElse(metalType CONTAINS STRING "Stainless",MonoVariate(StainlessBendingRadii,
        metalThick),MonoVariate(AluminumBendingRadii, metalThick))))'}
  revision: '10'
  revisionList:
  - {name: FaceFeatureTransfer, baseRevision: '9', from: Top, to: Top}
  - {name: FaceFeatureTransfer, baseRevision: '9', from: Front, to: Front}
  - {name: FaceFeatureTransfer, baseRevision: '9', from: Rear, to: Rear}
  - {name: FaceFeatureTransfer, baseRevision: '9', from: Right Side, to: Right Side}
  - {name: FaceFeatureTransfer, baseRevision: '9', from: Left Side, to: Left Side}
  - {name: FaceFeatureTransfer, baseRevision: '9', from: Chassis Base, to: Bottom}
  - {name: ParameterTransfer, baseRevision: '9', from: TopColor, to: Cover Color}
  - {name: ParameterTransfer, baseRevision: '9', from: ChassisColor, to: Base Color}
  - {name: ParameterTransfer, baseRevision: '9', from: Thickness, to: Base Thickness}
  - {name: ParameterTransfer, baseRevision: '9', from: Thickness, to: Cover Thickness}
  - {name: ParameterTransfer, baseRevision: '9', from: Width, to: Base Width}
  Transforms:
    View3D: {shiftX: 'IfElse( Height > 1.5, 0, -BaseBendRad - Base Thickness)', shiftY: -BaseBendRad - Base Thickness}
  Components:
  - Part:
      name: L Shape Base Part
      version: 7.5
      description: The bottom of an L-shape box
      partnumber: L Shape Base Part
      ID: cfa1cf0c-fcf4-4fb0-870d-ae16ab3f1755
      template: true
      verified: true
      Parser:
        verified: false
        version: 7.5
        id: 86156cd6-6511-4926-91d4-dacb7330795a
        partnumber: 86156cd6-6511-4926-91d4-dacb7330795a
        manufacturer: ''
        name: 47650928-d672-4fe3-a503-e3010c68a871
        Parameters:
        - {name: PartsGap, default: PartsGap}
        - {name: Overhang, default: Overhang}
        - {name: TabSize, default: TabSize}
        - {name: Width, default: Base Width, description: the length of the chassis}
        - {name: Depth, default: Depth}
        - {name: NotchSize, default: NotchSize, description: the width of a Notch}
        - {name: Height, default: Height, description: the height of the chassis}
        - {name: Thickness, default: Base Thickness, description: the thickness of the chassis}
        - {name: MetalType, default: MetalType, description: The Metal Type used}
        - {name: FlangeSize, default: FlangeSize, description: the width of a flange}
        - {name: CoverBendRad, default: CoverBendRad, description: the bend radius}
        - {name: BaseBendRad, default: BaseBendRad, description: the bend radius}
        - {name: BaseKFactor, default: BaseKFactor}
        - {name: ChassisColor, default: Base Color}
        - {name: HoleOffsetH, default: HoleOffsetH}
        - {name: ChassisFlangeHoleOffset, default: ChassisFlangeHoleOffset}
        - {name: HoleOffsetD, default: HoleOffsetD}
        - {name: CoverNut, default: CoverNut}
        - {name: FLD, default: FLD}
        - {name: FLH, default: FLH}
        - {name: FLW, default: FLW}
      MetalInfo: {material: MetalType, color: ChassisColor, thickness: Thickness}
      Connections:
      - {className: Absolute}
      Components:
      - PolyFace:
          layers: [Default]
          name: Bottom
          version: 7.5
          ID: 26fb5115-4eea-469d-aa88-73c480ac64dc
          verified: true
          pickable: true
          Vertices:
          - {x: '0', y: '0', z: '0'}
          - {x: 'IfElse(Height>1.5,Width,Width-2*BaseBendRad-2*Thickness)', y: '0',
            z: '0'}
          - {x: Width, y: FlangeSize, z: '0', exist: Height>1.5}
          - {x: Width-NotchSize-BaseBendRad-Thickness, y: FlangeSize, z: '0', exist: Height>1.5}
          - {x: Width-NotchSize-BaseBendRad-Thickness, y: FlangeSize+NotchSize, z: '0',
            exist: Height>1.5}
          - {x: Width-BaseBendRad-Thickness, y: FlangeSize+NotchSize, z: '0', exist: Height>1.5}
          - {x: 'IfElse(Height>1.5,Width-BaseBendRad-Thickness,Width-2*BaseBendRad-2*Thickness)',
            y: Depth - BaseBendRad - Thickness, z: '0'}
          - {x: 'IfElse(Height>1.5,BaseBendRad+Thickness,0)', y: Depth - BaseBendRad - Thickness,
            z: '0'}
          - {x: BaseBendRad+Thickness, y: FlangeSize+NotchSize, z: '0', exist: Height>1.5}
          - {x: BaseBendRad + Thickness+NotchSize, y: FlangeSize+NotchSize, z: '0',
            exist: Height>1.5}
          - {x: BaseBendRad + Thickness+NotchSize, y: FlangeSize, z: '0', exist: Height>1.5}
          - {x: '0', y: FlangeSize, z: '0', exist: Height>1.5}
          FaceCoordinateTransform:
            invertX: 'true'
            Origin: ['IfElse(Height>1.5, 0, -BaseBendRad-Thickness)', -BaseBendRad-Thickness]
            xDir: ['1.0', '0.0']
            yDir: ['0.0', '1.0']
          Components:
          - Bend:
              layers: [Default]
              name: base-Front bend
              version: 7.5
              ID: 45dadee6-2256-434b-ba8c-3fa26d61fbd6
              verified: true
              length: IfElse(Height>1.5,Width,Width-2*BaseBendRad-2*Thickness)
              angle: '90'
              irad: BaseBendRad
              kfactor: BaseKFactor
              taper0: IfElse(Height>1.5,BaseBendRad+Thickness,-BaseBendRad-Thickness)
              taper1: IfElse(Height>1.5,BaseBendRad+Thickness,-BaseBendRad-Thickness)
              FaceCoordinateTransform:
                Origin: ['0.0', '0.0']
                xDir: ['1.0', '0.0']
                yDir: ['0.0', '1.0']
              Components:
              - PolyFace:
                  layers: [Default]
                  name: Front
                  version: 7.5
                  ID: 53bac58e-ea1d-4312-b47f-7e9a1c40cff8
                  verified: true
                  pickable: true
                  Direct Printing: {Top: false, Bottom: true, Asked Bottom: true,
                    Asked Top: false}
                  Vertices:
                  - {x: '0', y: '0', z: '0'}
                  - {x: 'IfElse(Height> 1.5,Width - 2*Thickness - 2*BaseBendRad,Width)',
                    y: '0', z: '0'}
                  - {x: Width - 2*Thickness - 2*BaseBendRad, y: Height - TabSize-NotchSize - BaseBendRad - Thickness,
                    z: '0', exist: (Height)> 1.5}
                  - {x: Width - 2*Thickness - 2*BaseBendRad-NotchSize, y: Height - TabSize-NotchSize - BaseBendRad - Thickness,
                    z: '0', exist: (Height)> 1.5}
                  - {x: Width - 2*Thickness - 2*BaseBendRad-NotchSize, y: Height - TabSize - BaseBendRad - Thickness,
                    z: '0', exist: (Height)> 1.5}
                  - {x: Width - Thickness - BaseBendRad, y: Height - TabSize - BaseBendRad - Thickness,
                    z: '0', exist: (Height)> 1.5}
                  - {x: 'IfElse(Height> 1.5,Width - Thickness - BaseBendRad,Width)',
                    y: Height - BaseBendRad - Thickness, z: '0'}
                  - {x: 'IfElse(Height>1.5,Width - Thickness - BaseBendRad - TabSize,Width-TabSize)',
                    y: Height - BaseBendRad - Thickness, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,Width - Thickness - BaseBendRad - TabSize,
                      Width-TabSize)', y: Height-2*BaseBendRad-2*Thickness-NotchSize,
                    z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,Width - Thickness - BaseBendRad - TabSize-NotchSize,Width-TabSize-NotchSize)',
                    y: Height-2*BaseBendRad-2*Thickness-NotchSize, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,Width - Thickness - BaseBendRad - TabSize-NotchSize,Width-TabSize-NotchSize)',
                    y: Height-2*BaseBendRad-2*Thickness, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,TabSize - Thickness - BaseBendRad+NotchSize,TabSize+NotchSize)',
                    y: Height-2*BaseBendRad-2*Thickness, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,TabSize - Thickness - BaseBendRad+NotchSize,TabSize+NotchSize)',
                    y: Height-2*BaseBendRad-2*Thickness-NotchSize, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,TabSize - Thickness - BaseBendRad,TabSize)',
                    y: Height-2*BaseBendRad-2*Thickness-NotchSize, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height>1.5,TabSize - Thickness - BaseBendRad,TabSize)',
                    y: Height - BaseBendRad - Thickness, z: '0', exist: 'IfElse(18>Width,0.0,1.0)'}
                  - {x: 'IfElse(Height> 1.5,- Thickness - BaseBendRad,0)', y: Height - BaseBendRad - Thickness,
                    z: '0'}
                  - {x: '- Thickness - BaseBendRad', y: Height-TabSize - BaseBendRad - Thickness,
                    z: '0', exist: Height> 1.5}
                  - {x: NotchSize, y: Height-TabSize - BaseBendRad - Thickness, z: '0',
                    exist: Height> 1.5}
                  - {x: NotchSize, y: Height-TabSize-NotchSize - BaseBendRad - Thickness,
                    z: '0', exist: Height> 1.5}
                  - {x: '0', y: Height-TabSize-NotchSize-BaseBendRad-Thickness, z: '0',
                    exist: Height> 1.5}
                  FaceCoordinateTransform:
                    Origin: ['IfElse(Height>1.5, Width-BaseBendRad-Thickness, Width)',
                      -BaseBendRad-Thickness]
                    xDir: ['-1.0', '0.0']
                    yDir: ['0.0', '1.0']
                  Components:
                  - Bend:
                      layers: [Default]
                      name: Front-Left flange
                      version: 7.5
                      ID: 431087d3-0ebc-45b6-ae94-0cd9468c6e00
                      exist: Height > 1.5
                      verified: true
                      length: Height - TabSize-NotchSize - BaseBendRad - Thickness
                      angle: '90'
                      irad: BaseBendRad
                      kfactor: BaseKFactor
                      taper1: -BaseBendRad
                      FaceCoordinateTransform:
                        Origin: ['0.0', '0.0']
                        xDir: ['1.0', '0.0']
                        yDir: ['0.0', '1.0']
                      Components:
                      - RectFace:
                          layers: [Default]
                          name: Left Flange
                          version: 7.5
                          ID: fd0932c9-1d77-4bf2-a5e7-61db019b578e
                          verified: true
                          length: 'Height - NotchSize - TabSize-Thickness '
                          width: FlangeSize
                          FaceCoordinateTransform:
                            Origin: ['0.0', '0.0']
                            xDir: ['1.0', '0.0']
                            yDir: ['0.0', '1.0']
                          Connections:
                          - {className: Seam, parentSide: '2.0', parentSideLoc: ((Height - TabSize-NotchSize - BaseBendRad - Thickness) - (0)) - (-BaseBendRad),
                            childSideLoc: '0'}
                          Attachment2Ds:
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              exist: IfElse(10>Height,0.0,1.0)
                              template: true
                              verified: true
                              OriginX: ((0.0)+((1.0)*(Height/2 + .025)))+((0.0)*(FlangeSize/2))
                              OriginY: ((0.0)+((0.0)*(Height/2 + .025)))+((1.0)*(FlangeSize/2))
                              onSameSide: false
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              template: true
                              verified: true
                              OriginX: ((0.0)+((1.0)*(HoleOffsetH)))+((0.0)*(FlangeSize/2))
                              OriginY: ((0.0)+((0.0)*(HoleOffsetH)))+((1.0)*(FlangeSize/2))
                              onSameSide: false
                      Connections:
                      - {className: Seam, parentSide: '1', parentSideLoc: Height - NotchSize - TabSize-BaseBendRad-Thickness,
                        childSideLoc: '0'}
                  - Bend:
                      layers: [Default]
                      name: Front-Right flange
                      version: 7.5
                      ID: d86fa7bd-c618-4605-9cd1-38b768db7c66
                      exist: Height> 1.5
                      verified: true
                      length: Height - TabSize-NotchSize - BaseBendRad - Thickness
                      angle: '90'
                      irad: BaseBendRad
                      kfactor: BaseKFactor
                      taper0: -BaseBendRad
                      FaceCoordinateTransform:
                        Origin: ['0.0', '0.0']
                        xDir: ['1.0', '0.0']
                        yDir: ['0.0', '1.0']
                      Components:
                      - RectFace:
                          layers: [Default]
                          name: Right flange
                          version: 7.5
                          ID: 2640b935-b5a1-4986-8148-10fc5f760cdc
                          verified: true
                          pickable: true
                          length: Height - NotchSize - TabSize -Thickness
                          width: FlangeSize
                          FaceCoordinateTransform:
                            Origin: ['0.0', '0.0']
                            xDir: ['1.0', '0.0']
                            yDir: ['0.0', '1.0']
                          Connections:
                          - {className: Seam, parentSide: '2.0', parentSideLoc: (Height - TabSize-NotchSize - BaseBendRad - Thickness) - (-BaseBendRad),
                            childSideLoc: '0'}
                          Attachment2Ds:
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              exist: IfElse(10>Height,0.0,1.0)
                              template: true
                              verified: true
                              OriginX: FLH - Height/2 - .025
                              OriginY: FlangeSize/2
                              onSameSide: false
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              template: true
                              verified: true
                              OriginX: FLH - HoleOffsetH
                              OriginY: FlangeSize / 2
                              onSameSide: false
                      Connections:
                      - {className: Seam, parentSide: 'IfElse(18>Width,11,19)', parentSideLoc: Height - NotchSize -TabSize-BaseBendRad-Thickness,
                        childSideLoc: '0'}
                  - Bend:
                      layers: [Default]
                      name: Front-Top Flange
                      version: 7.5
                      ID: 75687a7d-dc31-4dde-b30b-d6fc383ed2c6
                      exist: IfElse(18>Width,0.0,1.0)
                      verified: true
                      length: Width - 2*TabSize-2*NotchSize
                      angle: '90'
                      irad: BaseBendRad
                      kfactor: BaseKFactor
                      FaceCoordinateTransform:
                        Origin: ['0.0', '0.0']
                        xDir: ['1.0', '0.0']
                        yDir: ['0.0', '1.0']
                      Components:
                      - RectFace:
                          layers: [Default]
                          name: Top Flange
                          version: 7.5
                          ID: afb4e6e7-d0a0-4cb4-9340-f62bf3cfbfc9
                          verified: true
                          length: Width - 2*TabSize-2*NotchSize
                          width: FlangeSize
                          FaceCoordinateTransform:
                            Origin: ['0.0', '0.0']
                            xDir: ['1.0', '0.0']
                            yDir: ['0.0', '1.0']
                          Connections:
                          - {className: Seam, parentSide: '2.0', parentSideLoc: (Width - 2*TabSize-2*NotchSize) - (0),
                            childSideLoc: '0'}
                          Attachment2Ds:
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              template: true
                              verified: true
                              OriginX: ((0.0)+((1.0)*(HoleOffsetD)))+((0.0)*(FlangeSize/2))
                              OriginY: ((0.0)+((0.0)*(HoleOffsetD)))+((1.0)*(FlangeSize/2))
                              onSameSide: false
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              template: true
                              verified: true
                              OriginX: ((0.0)+((1.0)*(FLW-HoleOffsetD)))+((0.0)*(FlangeSize/2))
                              OriginY: ((0.0)+((0.0)*(FLW-HoleOffsetD)))+((1.0)*(FlangeSize/2))
                              onSameSide: false
                          - PEM:
                              partnumber: CoverNut
                              inLibrary: byParsedPartNum
                              name: S-M3-1ZI m3 heat treated carbon Nut
                              version: 7.5
                              description: |-
                                S-M3-1ZI m3 heat treated carbon Nut
                                Self-Clinching Nut
                                Metric
                                finish: ZI
                                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                              ID: 'PEM Nut: S-M3-1ZI'
                              template: true
                              verified: true
                              OriginX: ((0.0)+((1.0)*((FLW)/2)))+((0.0)*(FlangeSize/2))
                              OriginY: ((0.0)+((0.0)*((FLW)/2)))+((1.0)*(FlangeSize/2))
                              onSameSide: false
                      Connections:
                      - {className: Seam, parentSide: 'IfElse(Height> 1.5,10,6)',
                        parentSideLoc: Width-2*TabSize-2*NotchSize, childSideLoc: '0'}
                  Connections:
                  - {className: Seam, parentSide: '2.0', parentSideLoc: '((IfElse(Height>1.5,Width,Width-2*BaseBendRad-2*Thickness)))
                      - (IfElse(Height>1.5,BaseBendRad+Thickness,-BaseBendRad-Thickness))',
                    childSideLoc: 'IfElse(Height> 1.5,-BaseBendRad-Thickness,BaseBendRad+Thickness)'}
                  Attachment2Ds:
                  - Thing2D:
                      name: USB 3 Extension Cable, Panel Mount
                      version: 7.5
                      description: USB 3.0 B PANEL ADAPTER
                      manufacturer: USBFireWire.com
                      partnumber: RR-MSBFPM-06GR
                      ID: 5011c914-a48b-418a-a1a9-94dbc3635a13
                      verified: true
                      rotation: '90'
                      OriginX: '0.8661417322834639'
                      OriginY: '0.4911732283464567'
                      onSameSide: true
                      scaleFactorX: '-1.0'
                      Bounds: {width: (17.1)/(25.4), height: (31.3)/(25.4), x: (-8.6)/(25.4),
                        y: (-15.6)/(25.4)}
                      Attachment2Ds:
                      - Circle: {radius: '  0.044500', type: CUTOUT, name: circle,
                          version: 7.5, ID: 3c0a7fc6-ffbb-44b6-9e5b-fd7e2cfbaeea,
                          verified: false, layer: Default, OriginX: '-0.0010826772',
                          OriginY: '0.5723267717000001', onSameSide: true}
                      - Circle: {radius: '  0.044500', type: CUTOUT, name: circle,
                          version: 7.5, ID: 8a4a4b23-1272-4358-88bc-332f6e16da51,
                          verified: false, layer: Default, OriginX: '-0.0010826772',
                          OriginY: '-0.5696732283', onSameSide: true}
                      - Rectangle: {width: '0.46850393700787407', height: '0.46850393700787407',
                          type: CUTOUT, name: rectangle, version: 7.5, ID: 355209d8-341f-4f1f-8ee5-b1984adb5b93,
                          verified: false, layer: Default, OriginX: '-0.23425196850393704',
                          OriginY: '-0.23425196850393704', onSameSide: true, thickness: '1.0'}
                  - Thing2D:
                      name: SWITCH SLIDE SPDT 500MA 125V
                      version: 7.5
                      manufacturer: CW Industries
                      partnumber: GS-111-0000
                      ID: 4ee4a224-2452-4a42-ae40-a18789d9e122
                      verified: false
                      rotation: '-0.0'
                      OriginX: '1.850393700787401'
                      OriginY: '0.4911732283464567'
                      onSameSide: true
                      scaleFactorX: '-1.0'
                      Bounds: {width: (7.92)/(25.4), height: (19.35)/(25.4), x: '-0.1559055118',
                        y: '-0.3809055118'}
                      Attachment2Ds:
                      - Circle: {radius: '0.05', type: CUTOUT, name: circle, version: 7.5,
                          ID: b30502af-ba3e-4efa-b694-9d713386dc09, verified: false,
                          layer: Default, OriginX: '0.0', OriginY: '-0.28090551181102363',
                          onSameSide: true, thickness: '1.0'}
                      - Circle: {radius: '0.05', type: CUTOUT, name: circle, version: 7.5,
                          ID: 821d9409-c85b-46e3-970c-4bb7d1bb6c7b, verified: false,
                          layer: Default, OriginX: '0.0', OriginY: '0.28090551181102363',
                          onSameSide: true, thickness: '1.0'}
                      - Rectangle: {width: '0.11811023622047245', height: '0.2755905511811024',
                          type: CUTOUT, name: rectangle, version: 7.5, ID: bb419b15-4f32-40ee-a309-2551f35a03b0,
                          verified: false, layer: Default, OriginX: '-0.05905511811023623',
                          OriginY: '-0.1377952755905512', onSameSide: true, thickness: '1.0'}
                  - Thing2D:
                      name: PAN MNT HEADER 3.81MM SOLD 8POS
                      version: 7.5
                      description: 'Plug component, Nominal current: 8 A, Rated voltage
                        (III/2): 160 V, Number of positions: 8, Pitch: 3.81 mm, Connection
                        method: Solder/Slip-on connection, Color: green, Contact surface:
                        Tin, Mounting: Direct mounting'
                      manufacturer: Phoenix Contact
                      partnumber: '1827596'
                      ID: 5249a268-3396-45d3-b037-2bfbb2e5a318
                      verified: false
                      rotation: '-0.0'
                      OriginX: '5.377952755905512'
                      OriginY: '0.4911732283464567'
                      onSameSide: true
                      scaleFactorX: '-1.0'
                      Bounds: {width: (47)/(25.4), height: (17)/(25.4), x: '-0.9251968504',
                        y: '-0.3346456693'}
                      Attachment2Ds:
                      - Rectangle: {width: '1.6299212598425197', height: '0.3425196850393701',
                          type: CUTOUT, name: rectangle, version: 7.5, ID: d1cb3d8f-6e5c-471b-b56a-1dc5a8561046,
                          verified: false, layer: Default, OriginX: '-0.814764', OriginY: '-0.224406',
                          onSameSide: true, thickness: '1.0'}
                      - Circle: {radius: '0.0452755905511811', type: CUTOUT, name: circle,
                          version: 7.5, ID: ca29cbc9-133b-4642-bf31-8cc4535a0601,
                          verified: false, layer: Default, OriginX: '-0.7224409448818898',
                          OriginY: '0.22244094488188978', onSameSide: true, thickness: '1.0'}
                      - Circle: {radius: '0.0452755905511811', type: CUTOUT, name: circle,
                          version: 7.5, ID: 1374d19c-c392-4acd-8efd-9207897f2ea8,
                          verified: false, layer: Default, OriginX: '0.7204724409448819',
                          OriginY: '0.22440944881889766', onSameSide: true, thickness: '1.0'}
                  - Rectangle: {width: -1*(0.25), height: Height-TabSize-NotchSize - 0.25,
                      type: EXCLUSION, name: Right side Exclusion, version: 7.5, ID: 880e09e6-6a35-4fd1-afb3-a7ac0b159974,
                      exist: Height> 1.5, template: true, verified: true, layer: Default,
                      OriginX: '((IfElse(Height>1.5, Width-BaseBendRad-Thickness,
                        Width))+((-1.0)*(Width-0.25)))+((0.0)*(0.25))', OriginY: ((-BaseBendRad-Thickness)+((0.0)*(Width-0.25)))+((1.0)*(0.25)),
                      onSameSide: true}
                  - Rectangle: {width: -1*(0.25), height: Height-TabSize-NotchSize - 0.25,
                      type: EXCLUSION, name: Left Side Exclusion, version: 7.5, ID: 6727a90c-bad9-479b-b8e5-13c818f0b676,
                      exist: Height> 1.5, template: true, verified: true, layer: Default,
                      OriginX: '((IfElse(Height>1.5, Width-BaseBendRad-Thickness,
                        Width))+((-1.0)*(0)))+((0.0)*(0.25))', OriginY: ((-BaseBendRad-Thickness)+((0.0)*(0)))+((1.0)*(0.25)),
                      onSameSide: true}
                  - Rectangle: {width: -1*(Width-2*(TabSize+NotchSize)), height: '.25',
                      type: EXCLUSION, name: Top Bend Exclusion, version: 7.5, ID: 63891bdd-6a3f-4f46-9148-3b1dc21c9dc2,
                      exist: Width GEQ 18, template: true, verified: true, layer: Default,
                      OriginX: '((IfElse(Height>1.5, Width-BaseBendRad-Thickness,
                        Width))+((-1.0)*(TabSize+NotchSize)))+((0.0)*(Height-0.25))',
                      OriginY: ((-BaseBendRad-Thickness)+((0.0)*(TabSize+NotchSize)))+((1.0)*(Height-0.25)),
                      onSameSide: true}
                  - Rectangle: {width: -1*(Width), height: '.25', type: EXCLUSION,
                      name: Bottom Bend Exclusion, version: 7.5, ID: 0e200e62-901c-4bb2-b388-f5388fda8b78,
                      template: true, verified: true, layer: Default, OriginX: '((IfElse(Height>1.5,
                        Width-BaseBendRad-Thickness, Width))+((-1.0)*(0)))+((0.0)*(0))',
                      OriginY: ((-BaseBendRad-Thickness)+((0.0)*(0)))+((1.0)*(0)),
                      onSameSide: true}
                  - Circle: {radius: '0.12992125984251968', type: CUTOUT, name: circle,
                      version: 7.5, ID: 4d3332e1-76a1-45f7-9a53-1ed583b7cd7e, verified: false,
                      layer: Default, rotation: '-0.0', OriginX: '3.2283464566929134',
                      OriginY: '0.31400787401574803', onSameSide: true, scaleFactorX: '-1.0',
                      thickness: '1.0'}
                  - Text2D: {type: SILKSCREEN, color: Blue Pantone Process C, name: Text,
                      version: 7.5, ID: 1c1c719e-e111-4b00-a87f-001cf7ed05e9, verified: false,
                      rotation: '-0.0', OriginX: '3.622047244094488', OriginY: '0.5856614173228347',
                      onSameSide: true, scaleFactorX: '-1.0', content: REFCLK  IN,
                      fontFamily: Tahoma, fontStyle: Regular, fontSize: '12.0', sizeCorrected: true}
              Connections:
              - {className: Seam, parentSide: '0', parentSideLoc: 'IfElse(Height>1.5,Width,Width-2*BaseBendRad-2*Thickness)',
                childSideLoc: '0'}
          - Bend:
              layers: [Default]
              name: Bottom-Right side flange
              version: 7.5
              ID: 2b68bf9d-4238-46d0-83eb-df7b105aa805
              verified: true
              length: IfElse(Height>1.5,Depth-Thickness-BaseBendRad-FlangeSize-NotchSize -PartsGap,Depth-Thickness-BaseBendRad-PartsGap)
              angle: '90'
              irad: BaseBendRad
              kfactor: BaseKFactor
              taper0: IfElse(Height>Depth,CoverBendRad,0)
              taper1: IfElse(Height>1.5,0,-BaseBendRad)
              FaceCoordinateTransform:
                Origin: ['0.0', '0.0']
                xDir: ['1.0', '0.0']
                yDir: ['0.0', '1.0']
              Components:
              - RectFace:
                  layers: [Default]
                  name: Bottom right flange
                  version: 7.5
                  ID: c14cdac8-ddb8-4f35-8d48-fbf03db8d8c8
                  verified: true
                  pickable: true
                  length: FLD
                  width: FlangeSize
                  FaceCoordinateTransform:
                    Origin: [Depth, '0.0']
                    xDir: ['-1.0', '0.0']
                    yDir: ['0.0', '1.0']
                  AttachPts:
                  - {className: MatePt, name: Base-Cover Point, ID: aca75270-fe38-4598-985a-505763621a2d,
                    x: '0', y: '0', z: '0', onBottom: true, gap: PartsGap}
                  Connections:
                  - {className: Seam, parentSide: '2.0', parentSideLoc: FLD, childSideLoc: '0'}
                  Attachment2Ds:
                  - PEM:
                      partnumber: CoverNut
                      inLibrary: byParsedPartNum
                      name: S-M3-1ZI m3 heat treated carbon Nut
                      version: 7.5
                      description: |-
                        S-M3-1ZI m3 heat treated carbon Nut
                        Self-Clinching Nut
                        Metric
                        finish: ZI
                        Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                      ID: 'PEM Nut: S-M3-1ZI'
                      template: true
                      verified: true
                      OriginX: IfElse(Height > 1.5, HoleOffsetD,ChassisFlangeHoleOffset - Thickness-PartsGap)
                      OriginY: FlangeSize/2
                      onSameSide: false
                  - PEM:
                      partnumber: CoverNut
                      inLibrary: byParsedPartNum
                      name: S-M3-1ZI m3 heat treated carbon Nut
                      version: 7.5
                      description: |-
                        S-M3-1ZI m3 heat treated carbon Nut
                        Self-Clinching Nut
                        Metric
                        finish: ZI
                        Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                      ID: 'PEM Nut: S-M3-1ZI'
                      template: true
                      verified: true
                      OriginX: IfElse(Height > 1.5,FLD-HoleOffsetD,Depth - ChassisFlangeHoleOffset)
                      OriginY: FlangeSize/2
                      onSameSide: false
                  - PEM:
                      partnumber: CoverNut
                      inLibrary: byParsedPartNum
                      name: S-M3-1ZI m3 heat treated carbon Nut
                      version: 7.5
                      description: |-
                        S-M3-1ZI m3 heat treated carbon Nut
                        Self-Clinching Nut
                        Metric
                        finish: ZI
                        Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                      ID: 'PEM Nut: S-M3-1ZI'
                      exist: IfElse(12>Depth,0.0,1.0)
                      template: true
                      verified: true
                      OriginX: FLD/2
                      OriginY: FlangeSize/2
                      onSameSide: false
              Connections:
              - {className: Seam, parentSide: 'IfElse(Height>1.5,5,1)', parentSideLoc: 'IfElse(Height>1.5,Depth-Thickness-BaseBendRad-FlangeSize-NotchSize,Depth-BaseBendRad-Thickness)',
                childSideLoc: '0'}
          - Bend:
              layers: [Default]
              name: Bottom-Left flange
              version: 7.5
              ID: 7ae11617-a98c-46e5-989d-341bbf9f0464
              verified: true
              length: IfElse(Height>1.5,Depth-Thickness-BaseBendRad-FlangeSize-NotchSize-PartsGap,Depth - Thickness-BaseBendRad-PartsGap)
              angle: '90'
              irad: BaseBendRad
              kfactor: BaseKFactor
              taper0: IfElse(Height>1.5,0,-BaseBendRad)
              taper1: IfElse(Height > Depth, CoverBendRad, 0)
              FaceCoordinateTransform:
                Origin: ['0.0', '0.0']
                xDir: ['1.0', '0.0']
                yDir: ['0.0', '1.0']
              Components:
              - RectFace:
                  layers: [Default]
                  name: Left chassis flange
                  version: 7.5
                  ID: fe3fdae8-1043-413d-b0f4-8ea1b1de842f
                  verified: true
                  length: FLD
                  width: FlangeSize
                  FaceCoordinateTransform:
                    invertX: 'true'
                    Origin: [-Thickness-PartsGap, -BaseBendRad-Thickness]
                    xDir: ['1.0', '0.0']
                    yDir: ['0.0', '1.0']
                  Connections:
                  - {className: Seam, parentSide: '2.0', parentSideLoc: FLD, childSideLoc: '0'}
                  Attachment2Ds:
                  - PEM:
                      partnumber: CoverNut
                      inLibrary: byParsedPartNum
                      name: S-M3-1ZI m3 heat treated carbon Nut
                      version: 7.5
                      description: |-
                        S-M3-1ZI m3 heat treated carbon Nut
                        Self-Clinching Nut
                        Metric
                        finish: ZI
                        Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                      ID: 'PEM Nut: S-M3-1ZI'
                      template: true
                      verified: true
                      OriginX: IfElse(Height>1.5,HoleOffsetD,ChassisFlangeHoleOffset - Thickness - PartsGap)
                      OriginY: FlangeSize/2
                      onSameSide: false
                  - PEM:
                      partnumber: CoverNut
                      inLibrary: byParsedPartNum
                      name: S-M3-1ZI m3 heat treated carbon Nut
                      version: 7.5
                      description: |-
                        S-M3-1ZI m3 heat treated carbon Nut
                        Self-Clinching Nut
                        Metric
                        finish: ZI
                        Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                      ID: 'PEM Nut: S-M3-1ZI'
                      template: true
                      verified: true
                      OriginX: IfElse(Height>1.5,FLD-HoleOffsetD,Depth-ChassisFlangeHoleOffset)
                      OriginY: FlangeSize/2
                      onSameSide: false
                  - PEM:
                      partnumber: CoverNut
                      inLibrary: byParsedPartNum
                      name: S-M3-1ZI m3 heat treated carbon Nut
                      version: 7.5
                      description: |-
                        S-M3-1ZI m3 heat treated carbon Nut
                        Self-Clinching Nut
                        Metric
                        finish: ZI
                        Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
                      ID: 'PEM Nut: S-M3-1ZI'
                      exist: IfElse(12>Depth,0.0,1.0)
                      template: true
                      verified: true
                      OriginX: FLD/2
                      OriginY: FlangeSize/2
                      onSameSide: false
              Connections:
              - {className: Seam, parentSide: 'IfElse(Height>1.5,7,3)', parentSideLoc: 'IfElse(Height>1.5,Depth
                  - Thickness-BaseBendRad-FlangeSize-NotchSize-PartsGap,Depth-BaseBendRad-Thickness-PartsGap)',
                childSideLoc: '0'}
          Connections:
          - {className: Absolute}
          Attachment2Ds:
          - PEM:
              type: PEM
              name: BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
              version: 7.5
              description: |-
                BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
                Blind Threaded Standoffs
                Metric
                finish: ZI
                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
              partnumber: BSO-M3-8ZI
              ID: 'PEM Standoff: BSO-M3-8ZI'
              verified: true
              OriginX: '2.239204724409449'
              OriginY: '0.6565275590551182'
              onSameSide: false
              scaleFactorX: '-1.0'
              inLibrary: byID
          - PEM:
              type: PEM
              name: BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
              version: 7.5
              description: |-
                BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
                Blind Threaded Standoffs
                Metric
                finish: ZI
                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
              partnumber: BSO-M3-8ZI
              ID: 'PEM Standoff: BSO-M3-8ZI'
              verified: true
              OriginX: '3.814007874015748'
              OriginY: '0.6565275590551182'
              onSameSide: false
              scaleFactorX: '-1.0'
              inLibrary: byID
          - PEM:
              type: PEM
              name: BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
              version: 7.5
              description: |-
                BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
                Blind Threaded Standoffs
                Metric
                finish: ZI
                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
              partnumber: BSO-M3-8ZI
              ID: 'PEM Standoff: BSO-M3-8ZI'
              verified: true
              OriginX: '2.239204724409449'
              OriginY: '2.160464566929134'
              onSameSide: false
              scaleFactorX: '-1.0'
              inLibrary: byID
          - PEM:
              type: PEM
              name: BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
              version: 7.5
              description: |-
                BSO-M3-8ZI m3 - 4.2 by 8 mm heat treated carbon Standoff
                Blind Threaded Standoffs
                Metric
                finish: ZI
                Compatibility: Cold Rolled Steel, Galvanized Steel,  Aluminum
              partnumber: BSO-M3-8ZI
              ID: 'PEM Standoff: BSO-M3-8ZI'
              verified: true
              OriginX: '3.814007874015748'
              OriginY: '2.160464566929134'
              onSameSide: false
              scaleFactorX: '-1.0'
              inLibrary: byID
          - Rectangle: {width: Width, height: '.25', type: EXCLUSION, name: Front Bend Exclusion,
              version: 7.5, ID: c3dad352-f360-4652-85a1-9575f9888bd3, template: true,
              verified: true, layer: Default, OriginX: '((IfElse(Height>1.5, 0, -BaseBendRad-Thickness))+((1.0)*(0)))+((0.0)*(0))',
              OriginY: ((-BaseBendRad-Thickness)+((0.0)*(0)))+((1.0)*(0)), onSameSide: true}
          - Rectangle: {width: '0.25', height: Depth-Thickness-PartsGap-0.25, type: EXCLUSION,
              name: Right Bend Exclusion, version: 7.5, ID: 8b588aac-6425-41db-b5f5-9f3878df2932,
              template: true, verified: true, layer: Default, OriginX: '((IfElse(Height>1.5,
                0, -BaseBendRad-Thickness))+((1.0)*(0)))+((0.0)*(0.25))', OriginY: ((-BaseBendRad-Thickness)+((0.0)*(0)))+((1.0)*(0.25)),
              onSameSide: true}
          - Rectangle: {width: '.25', height: Depth-Thickness-PartsGap-0.25, type: EXCLUSION,
              name: Left Bend Exclusion, version: 7.5, ID: 9e96b2a8-21c0-4ec2-9934-e8241d9c546f,
              template: true, verified: true, layer: Default, OriginX: '((IfElse(Height>1.5,
                0, -BaseBendRad-Thickness))+((1.0)*(Width - 0.25)))+((0.0)*(0.25))',
              OriginY: ((-BaseBendRad-Thickness)+((0.0)*(Width - 0.25)))+((1.0)*(0.25)),
              onSameSide: true}
  - Part:
      name: L Shape Cover Top Side Part
      version: 7.5
      description: The top of an l-shape box made by attaching the sides to the top
      partnumber: L Shape Cover Top Side Part
      ID: 21a63a81-f6de-4638-97af-bebb1187ed91
      template: true
      verified: true
      Parser:
        verified: false
        version: 7.5
        id: a07e5af6-7baa-4cca-bbc5-0dcf6881dbb9
        partnumber: a07e5af6-7baa-4cca-bbc5-0dcf6881dbb9
        manufacturer: ''
        name: af1a55f9-7896-4a44-b15e-768d27ef9565
        Parameters:
        - {name: Overhang, default: Overhang}
        - {name: PartsGap, default: PartsGap}
        - {name: Width, default: Base Width+2*Cover Thickness+2*PartsGap, description: the length of the top}
        - {name: Depth, default: Depth+Overhang+Cover Thickness+PartsGap, description: the depth of the top}
        - {name: TotalD, default: Depth}
        - {name: TotalW, default: Base Width}
        - {name: TotalH, default: Height}
        - {name: Height, default: Height+Cover Thickness+PartsGap, description: the height of the top}
        - {name: Cover Thickness, default: Cover Thickness, description: the thickness of the top}
        - {name: MetalType, default: MetalType, description: The Metal Type used}
        - {name: CoverBendRad, default: CoverBendRad, description: the bend radius}
        - {name: CoverKFactor, default: CoverKFactor, description: the bend radius}
        - {name: Cover Color, default: Cover Color}
        - {name: BaseOuterRad, default: BaseBendRad + Base Thickness}
        - {name: FlangeSize, default: FlangeSize, description: the width of a flange}
        - {name: NotchSize, default: NotchSize, description: the width of a Notch}
        - {name: TabSize, default: TabSize}
        - {name: ChassisFlangeHoleOffset, default: ChassisFlangeHoleOffset}
        - {name: HoleOffsetH, default: HoleOffsetH}
        - {name: HoleOffsetD, default: HoleOffsetD}
        - {name: FLD, default: FLD}
        - {name: FLH, default: FLH}
        - {name: FLW, default: FLW}
        - {name: CoverScrew, default: CoverScrew}
        - {name: CoverMounts, default: CoverMounts}
        - {name: CoverWide, default: (Width Including Mounts - Base Width)/2 - CoverBendRad - Cover Thickness}
        - {name: CornerRad, default: CornerRad}
        - {name: sqrt3o2, default: sqrt3o2}
      MetalInfo: {material: MetalType, color: Cover Color, thickness: Cover Thickness}
      Connections:
      - {className: Relative, parent: Base-Cover Point, child: CoverTopSide-Base Point,
        rotation: '180', virtual: '0.0'}
      Components:
      - RectFace:
          layers: [Default]
          name: Top
          version: 7.5
          ID: a0d0cc39-12f3-40c1-b644-d37a2b0a6393
          verified: true
          pickable: true
          Direct Printing: {Top: false, Bottom: true, Asked Bottom: true, Asked Top: false}
          length: Width - 2*CoverBendRad - 2*Cover Thickness
          width: Depth-CoverBendRad-Cover Thickness
          FaceCoordinateTransform:
            Origin: [Width - 2*Cover Thickness - CoverBendRad - PartsGap, Overhang]
            xDir: ['-1.0', '0.0']
            yDir: ['0.0', '1.0']
          Components:
          - Bend:
              layers: [Default]
              name: Cover-Left Side
              version: 7.5
              ID: e0c6f207-63a1-43ee-b9d7-69e6699dc6b6
              verified: true
              length: Depth-CoverBendRad-Cover Thickness
              angle: '90'
              irad: CoverBendRad
              kfactor: CoverKFactor
              taper0: -CoverBendRad + PartsGap
              FaceCoordinateTransform:
                Origin: ['0.0', '0.0']
                xDir: ['1.0', '0.0']
                yDir: ['0.0', '1.0']
              Components:
              - PathFace:
                  layers: [Default]
                  name: Left Side
                  version: 7.5
                  ID: 76c91ace-e60f-4956-8d73-acd97e7ee519
                  verified: true
                  pickable: true
                  BaseProfile:
                    type: CONSTRUCT
                    name: Cover Left Side Profile
                    version: '7.5'
                    ID: f42bd831-4094-4427-b77f-e9d3970143fc
                    verified: true
                    layer: Default
                    pathSegments:
                    - Line: [Depth-Cover Thickness - PartsGap, '0']
                    - Line: ['0', Height - Cover Thickness - CoverBendRad - CoverBendRad - Cover Thickness]
                      exist: CoverMounts
                    - Line: ['0', Height - Cover Thickness - CoverBendRad - BaseOuterRad]
                      exist: (! CoverMounts)
                    - CircleArc3:
                        end: [-BaseOuterRad, BaseOuterRad]
                        mid: [-BaseOuterRad/2, sqrt3o2*BaseOuterRad]
                        exist: (! CoverMounts)
                    - Line: ['- Depth + Cover Thickness + PartsGap + CornerRad + BaseOuterRad',
                        '0']
                      exist: (! CoverMounts)
                    - Line: ['- Depth + Cover Thickness + PartsGap', '0']
                      exist: CoverMounts
                    - CircleArc3:
                        end: [-CornerRad, -CornerRad]
                        mid: [-CornerRad/2, -CornerRad + sqrt3o2*CornerRad]
                        exist: (! CoverMounts)
                    - Line: [(((((0)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0), (((((-Height + Cover Thickness + CoverBendRad + CornerRad)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0)]
                      exist: (! CoverMounts)
                    - Line: ['0', -Height + Cover Thickness + CoverBendRad + CoverBendRad + Cover Thickness + CornerRad]
                      exist: CoverMounts
                  FaceCoordinateTransform:
                    invertX: 'true'
                    Origin: [Depth - Overhang - Cover Thickness - PartsGap, 'Height
                        - Cover Thickness - CoverBendRad - IfElse(CoverMounts, (CoverBendRad
                        + Cover Thickness), 0)']
                    xDir: ['-1.0', '0.0']
                    yDir: ['0.0', '-1.0']
                  Components:
                  - Bend:
                      layers: [Default]
                      name: Left Side-Mount
                      version: 7.5
                      ID: 23722e59-a49f-43d6-a5bf-e469b380479e
                      exist: CoverMounts
                      verified: true
                      length: Depth - Cover Thickness
                      angle: '-90'
                      irad: CoverBendRad
                      kfactor: CoverKFactor
                      taper0: '0'
                      FaceCoordinateTransform:
                        Origin: ['0.0', '0.0']
                        xDir: ['1.0', '0.0']
                        yDir: ['0.0', '1.0']
                      Components:
                      - PathFace:
                          layers: [Default]
                          name: Left Mount
                          version: 7.5
                          ID: dac563ff-23c0-4ca7-a154-30372520ab09
                          verified: true
                          pickable: true
                          BaseProfile:
                            type: CONSTRUCT
                            name: Cover Left Mount Side Profile
                            version: '7.5'
                            ID: 21d50c37-d603-43d1-82cf-33149aa15b46
                            verified: true
                            layer: Default
                            pathSegments:
                            - Line: [Depth - Cover Thickness, '0']
                            - Line: ['0', CoverWide - CornerRad]
                            - CircleArc3:
                                end: [-CornerRad, CornerRad]
                                mid: [-CornerRad/2, sqrt3o2*CornerRad]
                            - Line: ['- Depth + Cover Thickness + 2 * CornerRad',
                                '0']
                            - CircleArc3:
                                end: [-CornerRad, -CornerRad]
                                mid: [-CornerRad/2, -CornerRad + sqrt3o2*CornerRad]
                            - Line: [(((((0)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0), (((((- CoverWide + CornerRad)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0)]
                          FaceCoordinateTransform:
                            invertX: 'true'
                            Origin: [Depth - Overhang - Cover Thickness, -CoverBendRad - Cover Thickness]
                            xDir: ['-1.0', '0.0']
                            yDir: ['0.0', '-1.0']
                          Connections:
                          - {className: Seam, parentSide: '2.0', parentSideLoc: Depth - Cover Thickness,
                            childSideLoc: '0'}
                          Attachment2Ds:
                          - Rectangle: {width: -Depth + Cover Thickness, height: '-0.25',
                              type: EXCLUSION, name: Bend Exclusion, version: 7.5,
                              ID: 21653c4d-cac3-49b9-9291-18bcd802a0d6, template: true,
                              verified: true, layer: Default, OriginX: Depth - Cover Thickness,
                              OriginY: -CoverBendRad - Cover Thickness + .25, onSameSide: true}
                      Connections:
                      - {className: Seam, parentSide: '2', parentSideLoc: Depth - Cover Thickness,
                        childSideLoc: '0', exist: CoverMounts}
                  Connections:
                  - {className: Seam, parentSide: '2.0', parentSideLoc: Depth - Cover Thickness - PartsGap,
                    childSideLoc: '0'}
                  Attachment2Ds:
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, exist: 'IfElse(10>TotalH,0.0,1.0)', template: true,
                      verified: false, OriginX: ((Depth - Overhang - Cover Thickness)+((-1.0)*(CoverBendRad+Cover Thickness+FlangeSize/2)))+((0.0)*(Height - (CoverBendRad+Cover Thickness) - (-CoverBendRad+PartsGap + TotalH/2+.275))),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(CoverBendRad+Cover Thickness+FlangeSize/2)))+((-1.0)*(Height - (CoverBendRad+Cover Thickness) - (-CoverBendRad+PartsGap + TotalH/2+.275))),
                      onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, exist: TotalH>1.5, template: true, verified: false,
                      OriginX: ((Depth - Overhang - Cover Thickness)+((-1.0)*(CoverBendRad+Cover Thickness+FlangeSize/2)))+((0.0)*(Height - (CoverBendRad+Cover Thickness) - (-CoverBendRad+PartsGap+TabSize+NotchSize+HoleOffsetH))),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(CoverBendRad+Cover Thickness+FlangeSize/2)))+((-1.0)*(Height - (CoverBendRad+Cover Thickness) - (-CoverBendRad+PartsGap+TabSize+NotchSize+HoleOffsetH))),
                      onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, template: true, verified: false, OriginX: '((Depth
                        - Overhang - Cover Thickness)+((-1.0)*(IfElse(TotalH>1.5,Depth
                        - Overhang - HoleOffsetD-Cover Thickness-PartsGap,Depth -
                        Overhang - ChassisFlangeHoleOffset))))+((0.0)*(CoverBendRad+Cover
                        Thickness+FlangeSize/2))', OriginY: '((Height - (CoverBendRad+Cover
                        Thickness))+((0.0)*(IfElse(TotalH>1.5,Depth - Overhang - HoleOffsetD-Cover
                        Thickness-PartsGap,Depth - Overhang - ChassisFlangeHoleOffset))))+((-1.0)*(CoverBendRad+Cover
                        Thickness+FlangeSize/2))', onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, template: true, verified: false, OriginX: '((Depth
                        - Overhang - Cover Thickness)+((-1.0)*(IfElse(Height>1.5,CoverBendRad+Cover
                        Thickness+FlangeSize+NotchSize+HoleOffsetD,ChassisFlangeHoleOffset))))+((0.0)*(CoverBendRad+Cover
                        Thickness+FlangeSize/2))', OriginY: '((Height - (CoverBendRad+Cover
                        Thickness))+((0.0)*(IfElse(Height>1.5,CoverBendRad+Cover Thickness+FlangeSize+NotchSize+HoleOffsetD,ChassisFlangeHoleOffset))))+((-1.0)*(CoverBendRad+Cover
                        Thickness+FlangeSize/2))', onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, exist: TotalD GEQ 12, template: true, verified: false,
                      OriginX: FLD/2, OriginY: Height - (CoverBendRad+Cover Thickness)- (CoverBendRad+Cover Thickness+FlangeSize/2),
                      onSameSide: true}
                  - Rectangle: {width: '-1*(IfElse(TotalH>1.5,TotalD - FlangeSize
                        - CoverBendRad - Cover Thickness-NotchSize,Depth))', height: -1*(FlangeSize+CoverBendRad+Cover Thickness),
                      type: EXCLUSION, name: Bottom Flange Exclusion, version: 7.5,
                      ID: 650fb81e-7dfb-4df8-ae8d-aaa7918602b5, template: true, verified: true,
                      layer: Default, OriginX: '((Depth - Overhang - Cover Thickness)+((-1.0)*(IfElse(TotalH>1.5,Cover
                        Thickness+CoverBendRad+FlangeSize+NotchSize,-Overhang))))+((0.0)*(0))',
                      OriginY: '((Height - (CoverBendRad+Cover Thickness))+((0.0)*(IfElse(TotalH>1.5,Cover
                        Thickness+CoverBendRad+FlangeSize+NotchSize,-Overhang))))+((-1.0)*(0))',
                      onSameSide: true}
                  - Rectangle: {width: -1*(Depth), height: -1*(.25), type: EXCLUSION,
                      name: Top Bend Exclusion, version: 7.5, ID: 601feaab-29ed-4db1-abeb-c2c776729fdf,
                      template: true, verified: true, layer: Default, OriginX: ((Depth - Overhang - Cover Thickness)+((-1.0)*(-Overhang)))+((0.0)*(Height-0.25)),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(-Overhang)))+((-1.0)*(Height-0.25)),
                      onSameSide: true}
                  - Rectangle: {width: -1*(Cover Thickness+CoverBendRad+FlangeSize),
                      height: -1*(TotalH-TabSize-NotchSize), type: EXCLUSION, name: Front Flange Exclusion,
                      version: 7.5, ID: 338f4dcc-b73a-4466-bc8e-8d9e447c298e, exist: TotalH> 1.5,
                      template: true, verified: true, layer: Default, OriginX: ((Depth - Overhang - Cover Thickness)+((-1.0)*(0)))+((0.0)*(0)),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(0)))+((-1.0)*(0)),
                      onSameSide: true}
              Connections:
              - {className: Seam, parentSide: '1', parentSideLoc: Depth-CoverBendRad-Cover Thickness,
                childSideLoc: '0'}
          - Bend:
              layers: [Default]
              name: Cover-Rear
              version: 7.5
              ID: 7d8f68e4-18af-40ba-8b0a-0427a332bc83
              verified: true
              length: Width - 2 * CoverBendRad-2 * Cover Thickness
              angle: '90'
              irad: CoverBendRad
              kfactor: CoverKFactor
              taper0: -CoverBendRad-Cover Thickness
              taper1: -CoverBendRad-Cover Thickness
              FaceCoordinateTransform:
                Origin: ['0.0', '0.0']
                xDir: ['1.0', '0.0']
                yDir: ['0.0', '1.0']
              Components:
              - PathFace:
                  layers: [Default]
                  name: Rear
                  version: 7.5
                  ID: 5246cf1c-032e-481a-b973-6ab0140c39ec
                  verified: true
                  pickable: true
                  Direct Printing: {Top: false, Bottom: true, Asked Bottom: true,
                    Asked Top: false}
                  BaseProfile:
                    type: CONSTRUCT
                    name: Cover Right Mount Side Profile
                    version: '7.5'
                    ID: 46c982f7-8150-4d35-b611-65ab898132ec
                    verified: true
                    layer: Default
                    pathSegments:
                    - Line: [Width, '0']
                    - Line: ['0', Height - Cover Thickness - CoverBendRad - CornerRad]
                    - CircleArc3:
                        end: [-CornerRad, CornerRad]
                        mid: [-CornerRad/2, sqrt3o2*CornerRad]
                    - Line: ['- Width + 2 * CornerRad', '0']
                    - CircleArc3:
                        end: [-CornerRad, -CornerRad]
                        mid: [-CornerRad/2, -CornerRad + sqrt3o2*CornerRad]
                    - Line: [(((((0)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0), (((((- Height + Cover Thickness + CoverBendRad + CornerRad)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0)]
                  FaceCoordinateTransform:
                    invertX: 'true'
                    Origin: [Width - Cover Thickness - PartsGap, Height - (CoverBendRad+Cover Thickness)]
                    xDir: ['-1.0', '0.0']
                    yDir: ['0.0', '-1.0']
                  Connections:
                  - {className: Seam, parentSide: '2.0', parentSideLoc: ((Width-2*CoverBendRad-2*Cover Thickness) - (-CoverBendRad-Cover Thickness)) - (-CoverBendRad-Cover Thickness),
                    childSideLoc: '0'}
                  Attachment2Ds:
                  - Circle: {radius: '0.12992125984251968', type: CUTOUT, name: circle,
                      version: 7.5, ID: 1de38714-d954-4d0a-9833-bf942218f1d4, verified: false,
                      layer: Default, OriginX: '2.932015748005512', OriginY: '0.2617716534992126',
                      onSameSide: true, scaleFactorX: '-1.0', scaleFactorY: '-1.0',
                      thickness: '1.0'}
                  - Rectangle: {width: -1*(Width-2*Cover Thickness), height: -1*(0.25),
                      type: EXCLUSION, name: Top Bend Exclusion, version: 7.5, ID: cd1408d3-3c4e-4af4-843c-6fd75157acbb,
                      template: true, verified: true, layer: Default, OriginX: ((Width - Cover Thickness - PartsGap)+((-1.0)*(-PartsGap)))+((0.0)*(Height - 0.25)),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(-PartsGap)))+((-1.0)*(Height - 0.25)),
                      onSameSide: true}
                  - Circle: {radius: '0.12992125984251968', type: CUTOUT, name: circle,
                      version: 7.5, ID: 365e4251-ae4a-4a6a-9621-3422a8f850b3, verified: false,
                      layer: Default, OriginX: '3.884771653517323', OriginY: '0.2617716534992126',
                      onSameSide: true, scaleFactorX: '-1.0', scaleFactorY: '-1.0',
                      thickness: '1.0'}
                  - Text2D: {type: SILKSCREEN, color: Blue Pantone Process C, name: Text,
                      version: 7.5, ID: be9e7c50-82a4-43f3-ab61-c4d5b3685faf, verified: false,
                      OriginX: '2.6170551180842523', OriginY: '0.6436614172787402',
                      onSameSide: true, scaleFactorY: '-1.0', content: CW OUT, fontFamily: Tahoma,
                      fontStyle: Regular, fontSize: '12.0', sizeCorrected: true}
                  - Text2D: {type: SILKSCREEN, color: Blue Pantone Process C, name: Text,
                      version: 7.5, ID: 272c14ac-e30a-4d16-8f65-36f8855459ae, verified: false,
                      OriginX: '3.680047244068504', OriginY: '0.6436614172787402',
                      onSameSide: true, scaleFactorY: '-1.0', content: RX IN, fontFamily: Tahoma,
                      fontStyle: Regular, fontSize: '12.0', sizeCorrected: true}
              Connections:
              - {className: Seam, parentSide: '2', parentSideLoc: Width-2*CoverBendRad-2*Cover Thickness,
                childSideLoc: '0'}
          - Bend:
              layers: [Default]
              name: Right Side Bend
              version: 7.5
              ID: 42177986-ae93-46dc-84e5-0c8a4982c506
              verified: true
              length: Depth-CoverBendRad-Cover Thickness
              angle: '90'
              irad: CoverBendRad
              kfactor: CoverKFactor
              taper1: -CoverBendRad + PartsGap
              FaceCoordinateTransform:
                Origin: ['0.0', '0.0']
                xDir: ['1.0', '0.0']
                yDir: ['0.0', '1.0']
              Components:
              - PathFace:
                  layers: [Default]
                  name: Right Side
                  version: 7.5
                  ID: fed4ee18-4acf-4918-b827-a75a7bce96d5
                  verified: true
                  pickable: true
                  BaseProfile:
                    type: CONSTRUCT
                    name: Cover Right Side Profile
                    version: '7.5'
                    ID: 2613bda1-a524-4f32-934c-1157aefc5a3f
                    verified: true
                    layer: Default
                    pathSegments:
                    - Line: [Depth - Cover Thickness - PartsGap, '0']
                    - Line: ['0', Height - Cover Thickness - CoverBendRad - CoverBendRad - Cover Thickness]
                      exist: CoverMounts
                    - Line: ['0', Height - Cover Thickness - CoverBendRad - CornerRad]
                      exist: (! CoverMounts)
                    - CircleArc3:
                        end: [-CornerRad, CornerRad]
                        mid: [-CornerRad/2, sqrt3o2*CornerRad]
                        exist: (! CoverMounts)
                    - Line: ['- Depth + Cover Thickness + PartsGap + CornerRad + BaseOuterRad',
                        '0']
                      exist: (! CoverMounts)
                    - Line: ['- Depth + Cover Thickness + PartsGap', '0']
                      exist: CoverMounts
                    - CircleArc3:
                        end: [-BaseOuterRad, -BaseOuterRad]
                        mid: [-BaseOuterRad/2, -BaseOuterRad + sqrt3o2*BaseOuterRad]
                        exist: (! CoverMounts)
                    - Line: [(((((0)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0), (((((-Height + Cover Thickness + CoverBendRad + BaseOuterRad)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0)]
                      exist: (! CoverMounts)
                    - Line: ['0', -Height + Cover Thickness + CoverBendRad + CoverBendRad + Cover Thickness + BaseOuterRad]
                      exist: CoverMounts
                  FaceCoordinateTransform:
                    Origin: [Overhang, 'Height - Cover Thickness - CoverBendRad -
                        IfElse(CoverMounts, (CoverBendRad + Cover Thickness), 0)']
                    xDir: ['1.0', '0.0']
                    yDir: ['0.0', '-1.0']
                  Components:
                  - Bend:
                      layers: [Default]
                      name: Right Side-Mount
                      version: 7.5
                      ID: a59d1b39-dd71-402f-88a3-991f18da016f
                      exist: CoverMounts
                      verified: true
                      length: Depth - Cover Thickness
                      angle: '-90'
                      irad: CoverBendRad
                      kfactor: CoverKFactor
                      taper0: '0'
                      FaceCoordinateTransform:
                        Origin: ['0.0', '0.0']
                        xDir: ['1.0', '0.0']
                        yDir: ['0.0', '1.0']
                      Components:
                      - PathFace:
                          layers: [Default]
                          name: Right Mount
                          version: 7.5
                          ID: f249319f-f1ec-47d3-942c-5edce9c743de
                          verified: true
                          pickable: true
                          BaseProfile:
                            type: CONSTRUCT
                            name: Cover Right Mount Side Profile
                            version: '7.5'
                            ID: 8cd8d69c-6ced-4317-92e3-c5f40b7263a7
                            verified: true
                            layer: Default
                            pathSegments:
                            - Line: [Depth - Cover Thickness, '0']
                            - Line: ['0', CoverWide - CornerRad]
                            - CircleArc3:
                                end: [-CornerRad, CornerRad]
                                mid: [-CornerRad/2, sqrt3o2*CornerRad]
                            - Line: ['- Depth + Cover Thickness + 2 * CornerRad',
                                '0']
                            - CircleArc3:
                                end: [-CornerRad, -CornerRad]
                                mid: [-CornerRad/2, -CornerRad + sqrt3o2*CornerRad]
                            - Line: [(((((0)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0), (((((- CoverWide + CornerRad)-(0.0))-(0.0))-(0.0))-(0.0))-(0.0)]
                          FaceCoordinateTransform:
                            invertY: 'true'
                            Origin: [Overhang, -Width - PartsGap - Cover Thickness - CoverBendRad]
                            xDir: ['1.0', '0.0']
                            yDir: ['0.0', '1.0']
                          Connections:
                          - {className: Seam, parentSide: '2.0', parentSideLoc: Depth - Cover Thickness,
                            childSideLoc: '0'}
                          Attachment2Ds:
                          - Rectangle: {width: Depth - Cover Thickness, height: '0.25',
                              type: EXCLUSION, name: Bend Exclusion, version: 7.5,
                              ID: 2831643b-fc56-4a4c-a085-49e891a4217b, template: true,
                              verified: true, layer: Default, OriginX: '0', OriginY: '-
                                Cover Thickness - CoverBendRad', onSameSide: true}
                      Connections:
                      - {className: Seam, parentSide: '2', parentSideLoc: Depth - Cover Thickness,
                        childSideLoc: '0', exist: CoverMounts}
                  AttachPts:
                  - {className: MatePt, name: CoverTopSide-Base Point, ID: 9aa797f1-448e-43d6-873b-7549c032f2d6,
                    x: Depth - Cover Thickness - PartsGap, y: Height - 2*Cover Thickness - 2*CoverBendRad,
                    z: '0', onBottom: false}
                  Connections:
                  - {className: Seam, parentSide: '2.0', parentSideLoc: Depth-CoverBendRad-Cover Thickness +CoverBendRad - PartsGap,
                    childSideLoc: '0'}
                  Attachment2Ds:
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, exist: 'IfElse(10>TotalH,0.0,1.0)', template: true,
                      verified: false, OriginX: ((Overhang)+((1.0)*(Cover Thickness+CoverBendRad+(FlangeSize)/2)))+((0.0)*(Height - (CoverBendRad+Cover Thickness) - (-CoverBendRad+PartsGap+TotalH/2+.275))),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(Cover Thickness+CoverBendRad+(FlangeSize)/2)))+((-1.0)*(Height - (CoverBendRad+Cover Thickness) - (-CoverBendRad+PartsGap+TotalH/2+.275))),
                      onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, exist: TotalH> 1.5, template: true, verified: false,
                      OriginX: ((Overhang)+((1.0)*(Cover Thickness+CoverBendRad+(FlangeSize)/2)))+((0.0)*(Height - (CoverBendRad+Cover Thickness) -(-CoverBendRad+PartsGap+TabSize+NotchSize+HoleOffsetH))),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(Cover Thickness+CoverBendRad+(FlangeSize)/2)))+((-1.0)*(Height - (CoverBendRad+Cover Thickness) -(-CoverBendRad+PartsGap+TabSize+NotchSize+HoleOffsetH))),
                      onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, template: true, verified: false, OriginX: '((Overhang)+((1.0)*(IfElse(TotalH>1.5,Cover
                        Thickness+CoverBendRad+FlangeSize+NotchSize+HoleOffsetD,ChassisFlangeHoleOffset))))+((0.0)*(CoverBendRad+Cover
                        Thickness + FlangeSize/2))', OriginY: '((Height - (CoverBendRad+Cover
                        Thickness))+((0.0)*(IfElse(TotalH>1.5,Cover Thickness+CoverBendRad+FlangeSize+NotchSize+HoleOffsetD,ChassisFlangeHoleOffset))))+((-1.0)*(CoverBendRad+Cover
                        Thickness + FlangeSize/2))', onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, template: true, verified: false, OriginX: '((Overhang)+((1.0)*(IfElse(TotalH>1.5,Depth-Cover
                        Thickness-HoleOffsetD-PartsGap-Overhang,Depth-ChassisFlangeHoleOffset-Overhang))))+((0.0)*(CoverBendRad+Cover
                        Thickness + FlangeSize/2))', OriginY: '((Height - (CoverBendRad+Cover
                        Thickness))+((0.0)*(IfElse(TotalH>1.5,Depth-Cover Thickness-HoleOffsetD-PartsGap-Overhang,Depth-ChassisFlangeHoleOffset-Overhang))))+((-1.0)*(CoverBendRad+Cover
                        Thickness + FlangeSize/2))', onSameSide: true}
                  - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
                      version: 7.5, exist: TotalD GEQ 12, template: true, verified: false,
                      OriginX: Depth - Cover Thickness - PartsGap - FLD/2, OriginY: Height - (CoverBendRad+Cover Thickness) - (CoverBendRad+Cover Thickness + FlangeSize/2),
                      onSameSide: true}
                  - Rectangle: {width: 'IfElse(TotalH>1.5,Depth-Overhang-CoverBendRad-Cover
                        Thickness-FlangeSize-NotchSize, Depth)', height: -1*(FlangeSize+CoverBendRad+Cover Thickness),
                      type: EXCLUSION, name: Bottom Flange Exclusion, version: 7.5,
                      ID: 6c80a38f-e18f-4a86-9391-11f28a70403b, template: true, verified: true,
                      layer: Default, OriginX: '((Overhang)+((1.0)*(IfElse(TotalH>1.5,Cover
                        Thickness+CoverBendRad+FlangeSize+NotchSize,-Overhang))))+((0.0)*(0))',
                      OriginY: '((Height - (CoverBendRad+Cover Thickness))+((0.0)*(IfElse(TotalH>1.5,Cover
                        Thickness+CoverBendRad+FlangeSize+NotchSize,-Overhang))))+((-1.0)*(0))',
                      onSameSide: true}
                  - Rectangle: {width: Depth, height: -1*(.25), type: EXCLUSION, name: Top Bend Exclusion,
                      version: 7.5, ID: e9680253-e333-43f0-bb2f-b1dfe737f061, template: true,
                      verified: true, layer: Default, OriginX: ((Overhang)+((1.0)*(0)))+((0.0)*(Height - 0.25)),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(0)))+((-1.0)*(Height - 0.25)),
                      onSameSide: true}
                  - Rectangle: {width: Cover Thickness+CoverBendRad+FlangeSize, height: -1*(TotalH-TabSize-NotchSize),
                      type: EXCLUSION, name: Front Flange Exclusion, version: 7.5,
                      ID: 4b7e7296-612a-4830-9f89-7aca077b1fd9, exist: TotalH > 1.5,
                      template: true, verified: true, layer: Default, OriginX: ((Overhang)+((1.0)*(0)))+((0.0)*(0)),
                      OriginY: ((Height - (CoverBendRad+Cover Thickness))+((0.0)*(0)))+((-1.0)*(0)),
                      onSameSide: true}
              Connections:
              - {className: Seam, parentSide: '3', parentSideLoc: Depth-(CoverBendRad+Cover Thickness),
                childSideLoc: '0'}
          Connections:
          - {className: Absolute}
          Attachment2Ds:
          - Bitmap:
              type: SILKSCREEN
              name: Un-named 2D Thing
              version: 7.5
              ID: f0139ae9-7877-4323-a67e-9dac0a9be692
              verified: false
              rotation: '-0.0'
              OriginX: '5.222401574777166'
              OriginY: '0.6205511811023623'
              onSameSide: true
              scaleFactorX: '-1.0'
              scaleFactorY: '-1.0'
              width: '4.104330708661418'
              height: '1.4783464566929134'
              data: !!binary |-
                
              fixedForBackground: false
          - Rectangle: {width: -1*(.25), height: Depth-0.25, type: EXCLUSION, name: Right Bend Exclusion,
              version: 7.5, ID: fd88c841-c65c-4e19-abc0-876500693576, template: true,
              verified: true, layer: Default, OriginX: ((Width - 2*Cover Thickness - CoverBendRad - PartsGap)+((-1.0)*(Width-Cover Thickness-PartsGap-0.25)))+((0.0)*(-Overhang)),
              OriginY: ((Overhang)+((0.0)*(Width-Cover Thickness-PartsGap-0.25)))+((1.0)*(-Overhang)),
              onSameSide: true}
          - Rectangle: {width: -1*(.25), height: Depth-0.25, type: EXCLUSION, name: Left Bend Exclusion,
              version: 7.5, ID: 2169eedc-f7db-4653-9640-9c153f23f018, template: true,
              verified: true, layer: Default, OriginX: ((Width - 2*Cover Thickness - CoverBendRad - PartsGap)+((-1.0)*(-Cover Thickness-PartsGap)))+((0.0)*(-Overhang)),
              OriginY: ((Overhang)+((0.0)*(-Cover Thickness-PartsGap)))+((1.0)*(-Overhang)),
              onSameSide: true}
          - Rectangle: {width: -1*(Width), height: '.25', type: EXCLUSION, name: Rear Bend Exclusion,
              version: 7.5, ID: 1a4dd09f-056a-42e8-aaea-e3501c2ee92b, template: true,
              verified: true, layer: Default, OriginX: ((Width - 2*Cover Thickness - CoverBendRad - PartsGap)+((-1.0)*(-Cover Thickness-PartsGap)))+((0.0)*(Depth-Overhang-0.25)),
              OriginY: ((Overhang)+((0.0)*(-Cover Thickness-PartsGap)))+((1.0)*(Depth-Overhang-0.25)),
              onSameSide: true}
          - Rectangle: {width: -1*(TotalW-2*TabSize-2*NotchSize), height: CoverBendRad+Cover Thickness+FlangeSize+Overhang,
              type: EXCLUSION, name: Front Flange Exclusion, version: 7.5, ID: de1732fe-0589-4530-a1db-ca260d53d7b5,
              exist: TotalW GEQ 18, template: true, verified: true, layer: Default,
              OriginX: ((Width - 2*Cover Thickness - CoverBendRad - PartsGap)+((-1.0)*(TabSize + NotchSize)))+((0.0)*(-Overhang)),
              OriginY: ((Overhang)+((0.0)*(TabSize + NotchSize)))+((1.0)*(-Overhang)),
              onSameSide: true}
          - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
              version: 7.5, exist: TotalW GEQ 18, template: true, verified: false,
              OriginX: ((Width - 2*Cover Thickness - CoverBendRad - PartsGap)+((-1.0)*(TabSize+NotchSize+FLW-HoleOffsetD)))+((0.0)*(CoverBendRad+Cover Thickness+(FlangeSize)/2)),
              OriginY: Overhang+CoverBendRad+Cover Thickness+(FlangeSize)/2, onSameSide: true}
          - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
              version: 7.5, exist: TotalW GEQ 18, template: true, verified: false,
              OriginX: ((Width - 2*Cover Thickness - CoverBendRad - PartsGap)+((-1.0)*(TabSize+NotchSize+FLW/2)))+((0.0)*(CoverBendRad+Cover Thickness+(FlangeSize)/2)),
              OriginY: Overhang+CoverBendRad+Cover Thickness+(FlangeSize)/2, onSameSide: true}
          - Screw: {partnumber: CoverScrew, inLibrary: byParsedPartNum, name: null,
              version: 7.5, exist: TotalW GEQ 18, template: true, verified: false,
              OriginX: Width - 2*Cover Thickness - CoverBendRad - PartsGap - (TabSize+NotchSize+HoleOffsetD),
              OriginY: Overhang+CoverBendRad+Cover Thickness+(FlangeSize)/2, onSameSide: true}
          - Text2D: {type: SILKSCREEN, color: Blue Pantone Process C, name: Text,
              version: 7.5, ID: 35726fa3-9dde-499a-b2d4-e9c4d018c5af, verified: false,
              rotation: '-0.0', OriginX: '5.879881889737796', OriginY: '0.10874015748031496',
              onSameSide: true, scaleFactorX: '-1.0', content: PWR/GPIO/PPS, fontFamily: Tahoma,
              fontStyle: Regular, fontSize: '12.0', sizeCorrected: true}
          - Text2D: {type: SILKSCREEN, color: Blue Pantone Process C, name: Text,
              version: 7.5, ID: 3b47f94f-664b-4e88-8d5f-94665c19dce0, verified: false,
              rotation: '-0.0', OriginX: '1.9822440944622048', OriginY: '0.10874015748031496',
              onSameSide: true, scaleFactorX: '-1.0', content: PROG, fontFamily: Tahoma,
              fontStyle: Regular, fontSize: '12.0', sizeCorrected: true}
          - Text2D: {type: SILKSCREEN, color: Blue Pantone Process C, name: Text,
              version: 7.5, ID: ea6d5f58-3337-4e4b-b391-20144b8617c3, verified: false,
              rotation: '-0.0', OriginX: '1.11610236217874', OriginY: '0.10874015748031496',
              onSameSide: true, scaleFactorX: '-1.0', content: USB 3.0, fontFamily: Tahoma,
              fontStyle: Regular, fontSize: '12.0', sizeCorrected: true}
