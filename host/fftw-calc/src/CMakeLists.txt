cmake_minimum_required(VERSION 2.8)

MACRO( FIND_PATH_REQUIRED arg1 arg2 )
    FIND_PATH( ${arg1} ${arg2} ${ARGN} )
    IF( "${${arg1}}" STREQUAL "${arg1}-NOTFOUND"  )
        MESSAGE( FATAL_ERROR "${arg2} not found" )
    ELSE()
        MESSAGE( STATUS "${arg2} found in ${${arg1}}" )
    ENDIF()
ENDMACRO( FIND_PATH_REQUIRED )

PROJECT( fftwcalc )
SET( fftwcalc_SRCS fftw-calc.c cpuid.c )
FIND_PATH_REQUIRED( FFTW_INC fftw3.h PATHS "${CMAKE_SOURCE_DIR}/../dependencies/fftw" PATH_SUFFIXES include )
INCLUDE_DIRECTORIES( ${FFTW_INC} )
IF(WIN32)
    MESSAGE( STATUS "Win32: using libfftw3-3.lib for linkage" )
    FIND_LIBRARY( FFTW_LIB libfftw3-3.lib REQUIRED PATHS ${FFTW_INC} ${FFTW_INC}/../lib )
    IF(MINGW)
        STRING( REPLACE ".lib" ".dll" FFTW_DLL ${FFTW_LIB} )
        MESSAGE( STATUS "MinGW: FFTW_DLL=${FFTW_DLL}" )
        EXECUTE_PROCESS( COMMAND ${CMAKE_COMMAND} -E copy "${FFTW_DLL}" ${CMAKE_BINARY_DIR} )
    ENDIF(MINGW)
ELSE(WIN32)
    MESSAGE( STATUS "unix: using libfftw3.a for linkage" )
    FIND_LIBRARY( FFTW_LIB fftw3 REQUIRED PATHS ${FFTW_INC} ${FFTW_INC}/../lib )
ENDIF(WIN32)
FIND_PACKAGE( OpenMP )
if(OPENMP_FOUND)
    SET( CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}" )
    SET( CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}" )
    SET( CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}" )
endif(OPENMP_FOUND)
ADD_EXECUTABLE( fftw-calc ${fftwcalc_SRCS} )
IF(WIN32)
    TARGET_LINK_LIBRARIES( fftw-calc ${LIBS} ${FFTW_LIB} )
ELSE(WIN32)
    TARGET_LINK_LIBRARIES( fftw-calc ${LIBS} ${FFTW_LIB} m )
ENDIF(WIN32)

